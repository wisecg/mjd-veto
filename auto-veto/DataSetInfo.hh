#include <iostream>

using namespace std;

void LoadDataSet(GATDataSet& ds, int dsNumber, size_t i)
{
  // DS0, aka P3JDY
  if(dsNumber == 0) {
    if(i==0) {
      ds.AddRunRange(2580,2580); //1
      ds.AddRunRange(2582,2612); //31
    }
    else if (i==1) {
      ds.AddRunRange(2614,2629); //16
      ds.AddRunRange(2644,2649);//6
      ds.AddRunRange(2658,2673);//16
    }
    else if (i==2) ds.AddRunRange(2689,2715);//28
    else if (i==3) ds.AddRunRange(2717,2750);//33
    else if (i==4) ds.AddRunRange(2751,2784);//33
    else if (i==5) ds.AddRunRange(2785,2820);//35
    else if (i==6) ds.AddRunRange(2821,2855);//34
    else if (i==7) ds.AddRunRange(2856,2890);//34
    else if (i==8) {
      ds.AddRunRange(2891,2907);//17
      ds.AddRunRange(2909,2920);//12
    }
    else if (i==9) ds.AddRunRange(3137,3166);//30
    else if (i==10) ds.AddRunRange(3167,3196);//30
    else if (i==11) ds.AddRunRange(3197,3226);//30
    else if (i==12) ds.AddRunRange(3227,3256);//30
    else if (i==13) {
      ds.AddRunRange(3257,3271);//14
      ds.AddRunRange(3293,3310);//18
    }
    else if (i==14) ds.AddRunRange(3311,3340);//30
    else if (i==15) ds.AddRunRange(3341,3370);//30
    else if (i==16) ds.AddRunRange(3371,3400);//30
    else if (i==17) ds.AddRunRange(3401,3432);//32
    else if (i==18) {
      ds.AddRunRange(3461,3462);//2
      ds.AddRunRange(3464,3500);//36
      //ds.AddRunRange(3464,3580);//117
    }
    else if (i==19) ds.AddRunRange(3501,3530);//30
    else if (i==20) ds.AddRunRange(3531,3560);//30
    else if (i==21) {
      ds.AddRunRange(3561,3580);//20
      ds.AddRunRange(3596,3610);//15
    }
    else if (i==22) ds.AddRunRange(3611,3645);//50
    else if (i==23) {
      ds.AddRunRange(4034,4035);//2
      ds.AddRunRange(4038,4040);//3
      ds.AddRunRange(4045,4074);//30
    }
    else if (i==24) ds.AddRunRange(4075,4104);//30
    else if (i==25) ds.AddRunRange(4105,4134);//30
    else if (i==26) {
      ds.AddRunRange(4239,4245);//7
      ds.AddRunRange(4248,4254);//7
      ds.AddRunRange(4256,4268);//13
    }
    else if (i==27) {
      ds.AddRunRange(4270,4271);//2
      ds.AddRunRange(4273,4283);//11
    }
    else if (i==28) ds.AddRunRange(4285,4311);//27
    else if (i==29) {
      ds.AddRunRange(4313,4318);//6
      ds.AddRunRange(4320,4320);//1
      ds.AddRunRange(4322,4326);//5
      ds.AddRunRange(4328,4336);//9
    }
    else if (i==30) ds.AddRunRange(4338,4361);//24
    else if (i==31) ds.AddRunRange(4363,4382);//20
    else if (i==32) ds.AddRunRange(4384,4401);//18
    else if (i==33) ds.AddRunRange(4403,4428);//26
    else if (i==34) ds.AddRunRange(4436,4454);//19
    else if (i==35) ds.AddRunRange(4457,4489);//33
    else if (i==36) {
      ds.AddRunRange(4491,4493);//3
      ds.AddRunRange(4497,4503);//7
      ds.AddRunRange(4505,4518);//14
    }
    else if (i==37) ds.AddRunRange(4549,4590);//32
    else if (i==38) ds.AddRunRange(4591,4624);//35
    else if (i==39) ds.AddRunRange(4625,4654);//30
    else if (i==40) ds.AddRunRange(4655,4684);//30
    else if (i==41) ds.AddRunRange(4685,4714);//30
    else if (i==42) ds.AddRunRange(4715,4744);//30
    else if (i==43) ds.AddRunRange(4745,4777);//33
    else if (i==44) {
      ds.AddRunRange(4789,4797);//10
      ds.AddRunRange(4800,4831);//32
    }
    else if (i==45) ds.AddRunRange(4854,4872);//19
    else if (i==46) {
      ds.AddRunRange(4874,4883);//10
      ds.AddRunRange(4885,4907);//23
    }
    else if (i==47) ds.AddRunRange(4938,4960);//23
    else if (i==48) {
      ds.AddRunRange(4962,4968);//7
      ds.AddRunRange(4970,4980);//11
    }
    else if (i==49) ds.AddRunRange(5007,5038);//32
    else if (i==50) ds.AddRunRange(5040,5061);//22
    else if (i==51) ds.AddRunRange(5090,5118);//29
    else if (i==52) ds.AddRunRange(5125,5154);//30
    else if (i==53) ds.AddRunRange(5155,5184);//30
    else if (i==54) ds.AddRunRange(5185,5224);//40
    else if (i==55) ds.AddRunRange(5225,5252);//28
    else if (i==56) ds.AddRunRange(5277,5300);//34
    else if (i==57) ds.AddRunRange(5301,5330);//30
    else if (i==58) {
      ds.AddRunRange(5372,5393);//22
      ds.AddRunRange(5405,5414);//10
    }
    else if (i==59) ds.AddRunRange(5449,5479);//30
    else if (i==60) {
      ds.AddRunRange(5480,5501);//23
      ds.AddRunRange(5525,5527);//3
      ds.AddRunRange(5531,5534);//4
    }
    else if (i==61) ds.AddRunRange(5555,5589);//35
    else if (i==62) ds.AddRunRange(5591,5608);//18
    else if (i==63) ds.AddRunRange(5610,5639);//30
    else if (i==64) ds.AddRunRange(5640,5669);//30
    else if (i==65) ds.AddRunRange(5670,5699);//30
    else if (i==66) ds.AddRunRange(5700,5729);//30
    else if (i==67) {
      ds.AddRunRange(5730,5751);//22
      ds.AddRunRange(5753,5764);//12
    }
    else if (i==68) ds.AddRunRange(5766,5795);//30
    else if (i==69) ds.AddRunRange(5796,5822);//27
    else if (i==70) ds.AddRunRange(5826,5850);//24
    else if (i==71) {
      ds.AddRunRange(5889,5890);//2
      ds.AddRunRange(5894,5902);//9
    }
    else if (i==72) {
      ds.AddRunRange(6553,6577);//25
      ds.AddRunRange(6775,6775);//1
    }
    else if (i==73) ds.AddRunRange(6776,6809);//34
    else if (i==74) ds.AddRunRange(6811,6830);//20
    else if (i==75) ds.AddRunRange(6834,6853);//20
    else if (i==76) {
      ds.AddRunRange(6887,6903); //17
      ds.AddRunRange(6957,6963);//7
    }
    else cout << "unknown run sequence (" << i << ") for DS" << dsNumber << endl;
  }

  // DS1, aka P3KJR
  else if(dsNumber == 1) {
    // 52 sets total
    if(i == 0)  ds.AddRunRange(9422, 9440); // 18
    else if(i == 1) {
      ds.AddRunRange(9471, 9487); // 16
      ds.AddRunRange(9492, 9492); // 0
    }
    else if(i == 2) ds.AddRunRange(9536, 9565); // 29
    else if(i == 3)  {
      ds.AddRunRange(9638, 9648); // 10
      ds.AddRunRange(9650, 9668); // 18
    }
    else if(i == 4) {
      ds.AddRunRange(9674, 9676); // 2
      ds.AddRunRange(9678, 9678); // 0
      ds.AddRunRange(9711, 9727); // 16
    }
    else if(i == 5) ds.AddRunRange(9763, 9780); // 17
    else if(i == 6) {
      ds.AddRunRange(9815, 9821); // 6
      ds.AddRunRange(9823, 9832); // 9
      ds.AddRunRange(9848, 9849); // 1
      ds.AddRunRange(9851, 9854); // 3
    }
    else if(i == 7) ds.AddRunRange(9856, 9912); // 56
    else if(i == 8) {
      //ds.AddRunRange(9856, 9912); // 26
      ds.AddRunRange(9928, 9928); // 0
    }
    else if(i == 9) {
      ds.AddRunRange(9952, 9966); // 14
      ds.AddRunRange(10019, 10035); // 16
    }
    else if(i == 10) {
      ds.AddRunRange(10074, 10090); // 16
      ds.AddRunRange(10114, 10125); // 11
    }
    else if(i == 11) ds.AddRunRange(10129, 10149); // 20
    else if(i == 12) ds.AddRunRange(10150, 10171); // 21
    else if(i == 13) ds.AddRunRange(10173, 10203); // 30
    else if(i == 14) ds.AddRunRange(10204, 10231); // 27
    else if(i == 15) {
      ds.AddRunRange(10262, 10278); // 16
      ds.AddRunRange(10298, 10299); // 1
      ds.AddRunRange(10301, 10301); // 0
      ds.AddRunRange(10304, 10308); // 4
    }
    else if(i == 16) ds.AddRunRange(10312, 10342); // 30
    else if(i == 17) {
      ds.AddRunRange(10344, 10350); // 6
      ds.AddRunRange(10378, 10394); // 16
      ds.AddRunRange(10552, 10558); // 6
    }
    else if(i == 18) ds.AddRunRange(10608, 10648); // 40
    else if(i == 19) ds.AddRunRange(10651, 10677); // 26
    else if(i == 20) ds.AddRunRange(10679, 10717); // 38
    else if(i == 21) {
      ds.AddRunRange(10745, 10761); // 16
      ds.AddRunRange(10788, 10803); // 15
    }
    else if(i == 22) {
      ds.AddRunRange(10830, 10845); // 15
      ds.AddRunRange(10963, 10976); // 13
    }
    else if(i == 23) {
      ds.AddRunRange(11002, 11008); // 6
      ds.AddRunRange(11010, 11019); // 9
      ds.AddRunRange(11046, 11066); // 20
    }
    else if(i == 24) ds.AddRunRange(11083, 11113); // 30
    else if(i == 25) ds.AddRunRange(11114, 11144); // 30
    else if(i == 26) ds.AddRunRange(11145, 11175); // 30
    else if(i == 27) {
      ds.AddRunRange(11176, 11200); // 24
      ds.AddRunRange(11350, 11350); // 0
      ds.AddRunRange(11403, 11410); // 7
    }
    else if(i == 28) {
      ds.AddRunRange(11414, 11417); // 3
      ds.AddRunRange(11419, 11426); // 7
      ds.AddRunRange(11428, 11432); // 4
      ds.AddRunRange(11434, 11444); // 10
      ds.AddRunRange(11446, 11451); // 5
    }
    else if(i == 29) {
      ds.AddRunRange(11453, 11453); // 0
      ds.AddRunRange(11455, 11458); // 3
      ds.AddRunRange(11466, 11476); // 10
      ds.AddRunRange(11477, 11483); // 6
      ds.AddRunRange(12445, 12445); // 0
      ds.AddRunRange(12466, 12467); // 1
      ds.AddRunRange(12477, 12483); // 6
      ds.AddRunRange(12486, 12493); // 7
    }
    else if(i == 30) ds.AddRunRange(12521, 12550); // 29
    else if(i == 31) ds.AddRunRange(12551, 12580); // 60
    else if(i == 32) {
      ds.AddRunRange(12607, 12625); // 18
      ds.AddRunRange(12636, 12647); // 11
      ds.AddRunRange(12652, 12653); // 1
    }
    else if(i == 33) ds.AddRunRange(12664, 12675); // 11
    else if(i == 34) ds.AddRunRange(12677, 12724); // 47
    else if(i == 35) ds.AddRunRange(12735, 12765); // 33
    else if(i == 36) ds.AddRunRange(12766, 12798); // 32
    else if(i == 37) {
      ds.AddRunRange(12816, 12816); // 0
      ds.AddRunRange(12819, 12819); // 1
      ds.AddRunRange(12821, 12821); // 0
      ds.AddRunRange(12823, 12824); // 1
      ds.AddRunRange(12827, 12831); // 5
      ds.AddRunRange(12833, 12838); // 6
      ds.AddRunRange(12842, 12842); // 0
      ds.AddRunRange(12843, 12861); // 18
      ds.AddRunRange(12875, 12875); // 0
    }
    else if(i == 38) ds.AddRunRange(13000, 13028); // 28
    else if(i == 39) {
      ds.AddRunRange(13029, 13053); // 24
      ds.AddRunRange(13055, 13056); // 1
    }
    else if(i == 40) {
      ds.AddRunRange(13066, 13072); // 6
      ds.AddRunRange(13074, 13074); // 1
      ds.AddRunRange(13076, 13092); // 16
      ds.AddRunRange(13094, 13096); // 2
    }
    else if(i == 41) {
      ds.AddRunRange(13100, 13115); // 15
      ds.AddRunRange(13117, 13119); // 2
      ds.AddRunRange(13123, 13137); // 14
    }
    else if(i == 42) {
      ds.AddRunRange(13148, 13150); // 2
      ds.AddRunRange(13154, 13156); // 2
      ds.AddRunRange(13186, 13189); // 3
      ds.AddRunRange(13191, 13211); // 20
    }
    else if(i == 43) ds.AddRunRange(13212, 13242); // 30
    else if(i == 44) ds.AddRunRange(13243, 13275); // 32
    else if(i == 45) {
      ds.AddRunRange(13276, 13287); // 11
      ds.AddRunRange(13304, 13304); // 0
      ds.AddRunRange(13306, 13311); // 5
      ds.AddRunRange(13313, 13325); // 12
    }
    else if(i == 46) {
      ds.AddRunRange(13326, 13350); // 24
      ds.AddRunRange(13362, 13368); // 6
    }
    else if(i == 47) {
      ds.AddRunRange(13369,13383); // 15
      ds.AddRunRange(13395,13411); // 17
    }
    else if(i == 48) ds.AddRunRange(13519,13548); // 30
    else if(i == 49) {
      ds.AddRunRange(13572,13573); // 2
      ds.AddRunRange(13667,13688); // 22
      ds.AddRunRange(13699,13704); // 6
      ds.AddRunRange(13715,13719); // 5
    }
    else if(i == 50) {
      ds.AddRunRange(14010,14040); // 31
      ds.AddRunRange(14041,14041); // 1
    }
    else if(i == 51) {
      ds.AddRunRange(14342,14372); // 31
      ds.AddRunRange(14386,14387); // 2
    }
    else cout << "unknown run sequence (" << i << ") for DS" << dsNumber << endl;
  }

  // DS3, aka P3KJR
  else if(dsNumber == 3) {
    // 21 sets total M1 &  24 sets total M2
    if(i == 0) {
      ds.AddRunRange(16797,16826); // 31
      ds.AddRunRange(16827,16835); // 9
    }
    else if(i == 1) ds.AddRunRange(16857,16886); // 31
    else if(i == 2) {
      ds.AddRunRange(16887,16910); // 24
      ds.AddRunRange(16931,16936); // 7
      ds.AddRunRange(16947,16952); // 6
    }
    else if(i == 3) {
      ds.AddRunRange(16957,16959); // 3
      ds.AddRunRange(16970,16999); // 31
    }
    else if(i == 4) {
      ds.AddRunRange(17000,17009); // 10
      ds.AddRunRange(17035,17057); // 24
    }
    else if(i == 5) ds.AddRunRange(17060,17090); // 31
    else if(i == 6) ds.AddRunRange(17091,17121); // 31
    else if(i == 7) {
      ds.AddRunRange(17122,17127); // 6
      ds.AddRunRange(17129,17131); // 3
      ds.AddRunRange(17138,17156); // 20
    }
    else if(i == 8) {
      ds.AddRunRange(17159,17181); // 24
      ds.AddRunRange(17305,17318); // 15
    }
    else if(i == 9) ds.AddRunRange(17322,17343); // 22
    else if(i == 10) ds.AddRunRange(17351,17381); // 31
    else if(i == 11) {
      ds.AddRunRange(17382,17412); // 31
      ds.AddRunRange(17413,17422); // 10
    }
    else if(i == 12) ds.AddRunRange(17448,17477); // 31
    else if(i == 13) ds.AddRunRange(17478,17493); // 16
    else if(i == 14) ds.AddRunRange(17500,17519); // 21
    else if(i == 15) {
      ds.AddRunRange(17531,17553); // 23
      ds.AddRunRange(17555,17559); // 5
    }
    else if(i == 16) ds.AddRunRange(17567,17597); // 31
    else if(i == 17) ds.AddRunRange(17598,17628); // 31
    else if(i == 18) ds.AddRunRange(17629,17659); // 31
    else if(i == 19) ds.AddRunRange(17660,17686); // 27
    else if(i == 20) {
      ds.AddRunRange(17703,17717); // 15
      ds.AddRunRange(17720,17721); // 2
    }
    else if(i == 21) ds.AddRunRange(17852,17882); // 31
    else if(i == 22) ds.AddRunRange(17883,17913); // 31
    else if(i == 23) ds.AddRunRange(17914,17944); // 31
    else if(i == 24) {
      ds.AddRunRange(17945,17948); // 4
      ds.AddRunRange(17967,17980); // 20
    }
     else cout << "unknown run sequence (" << i << ") for DS" << dsNumber << endl;
  }

  // DS4, aka P3LQG
  else if(dsNumber == 4) {
    // 21 sets total M1 &  24 sets total M2
    if(i == 0) {
      ds.AddRunRange(60000802,60000823); // 23
      ds.AddRunRange(60000827,60000828); // 2
      ds.AddRunRange(60000830,60000830); // 1
      ds.AddRunRange(60000847,60000847); // 1
      ds.AddRunRange(60000850,60000851); // 2
      ds.AddRunRange(60000854,60000855); // 2
       }
    else if(i == 1) {
      ds.AddRunRange(60000953,60000953); // 1
      ds.AddRunRange(60000970,60001000); // 31
    }
    else if(i == 2) {
      ds.AddRunRange(60001001,60001011); // 11
      ds.AddRunRange(60001013,60001013); // 1
    }
    else if(i == 3) ds.AddRunRange(60001033,60001062); // 31
    else if(i == 4) ds.AddRunRange(60001063,60001086); // 31
    else if(i == 5) ds.AddRunRange(60001088,60001093); // 31
    else if(i == 6) ds.AddRunRange(60001094,60001124); // 31
    else if(i == 7) {
      ds.AddRunRange(60001125,60001129); // 5
      ds.AddRunRange(60001163,60001181); // 20
      ds.AddRunRange(60001183,60001185); // 3
    }
    else if(i == 8) {
      ds.AddRunRange(60001187,60001205); // 19
      ds.AddRunRange(60001309,60001319); // 14
    }
    else if(i == 9) {
      ds.AddRunRange(60001331,60001350); // 21
      ds.AddRunRange(60001380,60001382); // 15
    }
    else if(i == 10) ds.AddRunRange(60001384,60001414); // 31
    else if(i == 11) ds.AddRunRange(60001415,60001441); // 27
    else if(i == 12) ds.AddRunRange(60001463,60001489); // 28
    else if(i == 13) ds.AddRunRange(60001491,60001506); // 16
    else if(i == 14) ds.AddRunRange(60001523,60001542); // 21
    else if(i == 15) ds.AddRunRange(60001597,60001624); // 31
    else if(i == 16) ds.AddRunRange(60001625,60001655); // 31
    else if(i == 17) ds.AddRunRange(60001656,60001686); // 31
    else if(i == 18) ds.AddRunRange(60001687,60001714); // 28
    else if(i == 19) ds.AddRunRange(60001756,60001786); // 31
    else if(i == 20) ds.AddRunRange(60001787,60001817); // 31
    else if(i == 21) {
      ds.AddRunRange(60001818,60001848); // 31
      ds.AddRunRange(60001849,60001853); // 5
    }
    else if(i == 22) ds.AddRunRange(60001874,60001888); // 31

    else cout << "unknown run sequence (" << i << ") for DS" << dsNumber << endl;
  }
  else cout << "LoadDataSet(): unknown dataset number DS" << dsNumber << endl;
}

void LoadDS4MuonList(vector<int> &muRuns, vector<double> &muRunTStarts, vector<double> &muTimes,
  vector<int> &muTypes, vector<double> &muUncert)
{
  // Created by "GenerateDS4MuonList" in $GATDIR/mjd-veto/skim-veto.cc

  vector<int> ds4muRuns = {60000804, 60000804, 60000804, 60000804, 60000804, 60000805, 60000806, 60000807, 60000807, 60000807, 60000808, 60000809, 60000810, 60000810, 60000810, 60000810, 60000811, 60000811, 60000813, 60000814, 60000814, 60000815, 60000816, 60000816, 60000817, 60000818, 60000819, 60000819, 60000820, 60000821, 60000827, 60000828, 60000830, 60000851, 60000851, 60000855, 60000858, 60000858, 60000858, 60000859, 60000859, 60000861, 60000862, 60000869, 60000870, 60000871, 60000872, 60000873, 60000873, 60000874, 60000875, 60000875, 60000876, 60000876, 60000877, 60000877, 60000878, 60000881, 60000882, 60000883, 60000883, 60000883, 60000884, 60000884, 60000885, 60000885, 60000886, 60000887, 60000887, 60000887, 60000890, 60000890, 60000892, 60000893, 60000893, 60000894, 60000894, 60000894, 60000895, 60000896, 60000896, 60000897, 60000897, 60000899, 60000900, 60000900, 60000902, 60000902, 60000902, 60000902, 60000903, 60000903, 60000903, 60000903, 60000903, 60000904, 60000905, 60000906, 60000908, 60000909, 60000909, 60000910, 60000910, 60000910, 60000912, 60000913, 60000914, 60000914, 60000915, 60000915, 60000915, 60000916, 60000917, 60000917, 60000919, 60000919, 60000919, 60000919, 60000922, 60000928, 60000929, 60000929, 60000929, 60000929, 60000929, 60000930, 60000930, 60000930, 60000930, 60000931, 60000931, 60000932, 60000933, 60000937, 60000937, 60000937, 60000938, 60000938, 60000940, 60000940, 60000941, 60000942, 60000942, 60000953, 60000970, 60000971, 60000972, 60000972, 60000973, 60000974, 60000974, 60000976, 60000976, 60000976, 60000976, 60000977, 60000977, 60000977, 60000977, 60000978, 60000979, 60000979, 60000979, 60000980, 60000982, 60000985, 60000985, 60000986, 60000986, 60000987, 60000988, 60000989, 60000989, 60000990, 60000992, 60000992, 60000993, 60000994, 60000994, 60000994, 60000995, 60000995, 60000996, 60000997, 60000997, 60000997, 60000998, 60000998, 60000998, 60000999, 60000999, 60000999, 60001000, 60001001, 60001001, 60001001, 60001002, 60001002, 60001002, 60001003, 60001004, 60001004, 60001004, 60001005, 60001006, 60001008, 60001008, 60001010, 60001033, 60001034, 60001035, 60001035, 60001037, 60001037, 60001037, 60001038, 60001038, 60001038, 60001039, 60001039, 60001040, 60001042, 60001042, 60001042, 60001043, 60001043, 60001045, 60001046, 60001048, 60001050, 60001050, 60001051, 60001052, 60001052, 60001052, 60001053, 60001053, 60001053, 60001054, 60001054, 60001055, 60001056, 60001056, 60001056, 60001057, 60001058, 60001058, 60001058, 60001059, 60001059, 60001060, 60001061, 60001061, 60001063, 60001063, 60001065, 60001065, 60001066, 60001066, 60001066, 60001068, 60001069, 60001069, 60001069, 60001070, 60001070, 60001070, 60001072, 60001072, 60001074, 60001074, 60001075, 60001075, 60001075, 60001077, 60001078, 60001078, 60001078, 60001078, 60001078, 60001079, 60001082, 60001082, 60001082, 60001083, 60001084, 60001084, 60001084, 60001085, 60001086, 60001086, 60001086, 60001088, 60001089, 60001089, 60001089, 60001091, 60001091, 60001092, 60001092, 60001093, 60001093, 60001094, 60001094, 60001096, 60001097, 60001097, 60001097, 60001098, 60001098, 60001100, 60001100, 60001100, 60001100, 60001100, 60001100, 60001101, 60001101, 60001102, 60001102, 60001103, 60001104, 60001104, 60001104, 60001107, 60001107, 60001107, 60001108, 60001108, 60001110, 60001111, 60001112, 60001112, 60001114, 60001114, 60001115, 60001115, 60001116, 60001117, 60001120, 60001121, 60001121, 60001122, 60001122, 60001123, 60001123, 60001165, 60001167, 60001168, 60001168, 60001169, 60001169, 60001169, 60001170, 60001170, 60001172, 60001175, 60001176, 60001177, 60001177, 60001177, 60001178, 60001178, 60001184, 60001184, 60001185, 60001188, 60001188, 60001189, 60001189, 60001190, 60001191, 60001191, 60001192, 60001192, 60001192, 60001193, 60001193, 60001193, 60001193, 60001194, 60001194, 60001194, 60001194, 60001195, 60001197, 60001197, 60001197, 60001198, 60001198, 60001199, 60001201, 60001203, 60001203, 60001203, 60001203, 60001204, 60001204, 60001205, 60001308, 60001308, 60001309, 60001310, 60001310, 60001311, 60001312, 60001313, 60001313, 60001313, 60001313, 60001315, 60001317, 60001317, 60001317, 60001318, 60001319, 60001330, 60001330, 60001330, 60001332, 60001333, 60001333, 60001333, 60001334, 60001334, 60001335, 60001335, 60001336, 60001337, 60001337, 60001338, 60001338, 60001339, 60001341, 60001341, 60001342, 60001342, 60001342, 60001342, 60001343, 60001343, 60001344, 60001344, 60001344, 60001345, 60001345, 60001346, 60001346, 60001346, 60001346, 60001347, 60001348, 60001350, 60001379, 60001379, 60001380, 60001381, 60001381, 60001381, 60001382, 60001382, 60001385, 60001386, 60001386, 60001387, 60001387, 60001387, 60001388, 60001389, 60001390, 60001390, 60001390, 60001391, 60001391, 60001391, 60001392, 60001394, 60001395, 60001397, 60001399, 60001399, 60001400, 60001403, 60001405, 60001405, 60001406, 60001406, 60001407, 60001408, 60001410, 60001410, 60001410, 60001410, 60001411, 60001412, 60001412, 60001413, 60001414, 60001415, 60001415, 60001416, 60001416, 60001417, 60001417, 60001418, 60001418, 60001418, 60001418, 60001419, 60001420, 60001420, 60001421, 60001421, 60001421, 60001424, 60001424, 60001426, 60001426, 60001427, 60001428, 60001429, 60001430, 60001430, 60001430, 60001431, 60001431, 60001432, 60001432, 60001433, 60001433, 60001434, 60001435, 60001435, 60001435, 60001436, 60001436, 60001437, 60001439, 60001463, 60001464, 60001465, 60001466, 60001467, 60001469, 60001470, 60001471, 60001471, 60001471, 60001472, 60001472, 60001473, 60001475, 60001475, 60001475, 60001475, 60001476, 60001477, 60001477, 60001478, 60001478, 60001478, 60001479, 60001480, 60001481, 60001482, 60001482, 60001482, 60001482, 60001483, 60001483, 60001484, 60001485, 60001485, 60001485, 60001487, 60001487, 60001488, 60001489, 60001491, 60001491, 60001491, 60001491, 60001492, 60001493, 60001493, 60001497, 60001497, 60001500, 60001500, 60001501, 60001501, 60001501, 60001501, 60001502, 60001502, 60001502, 60001503, 60001503, 60001504, 60001504, 60001505, 60001506, 60001507, 60001507, 60001507, 60001523, 60001523, 60001524, 60001524, 60001524, 60001524, 60001525, 60001525, 60001525, 60001525, 60001527, 60001527, 60001528, 60001529, 60001531, 60001532, 60001534, 60001535, 60001535, 60001536, 60001536, 60001537, 60001537, 60001537, 60001538, 60001538, 60001539, 60001541, 60001541, 60001541, 60001547, 60001548, 60001550, 60001553, 60001553, 60001553, 60001554, 60001554, 60001554, 60001555, 60001555, 60001559, 60001559, 60001560, 60001561, 60001562, 60001562, 60001564, 60001564, 60001565, 60001565, 60001567, 60001567, 60001568, 60001568, 60001568, 60001568, 60001572, 60001572, 60001572, 60001573, 60001575, 60001575, 60001576, 60001576, 60001594, 60001595, 60001596, 60001597, 60001597, 60001597, 60001597, 60001597, 60001599, 60001600, 60001600, 60001601, 60001602, 60001603, 60001603, 60001604, 60001605, 60001605, 60001606, 60001607, 60001607, 60001608, 60001610, 60001610, 60001610, 60001611, 60001612, 60001612, 60001613, 60001614, 60001616, 60001616, 60001616, 60001617, 60001617, 60001618, 60001618, 60001618, 60001619, 60001620, 60001621, 60001621, 60001622, 60001622, 60001623, 60001624, 60001625, 60001625, 60001627, 60001628, 60001629, 60001630, 60001631, 60001631, 60001632, 60001632, 60001633, 60001633, 60001633, 60001633, 60001633, 60001634, 60001635, 60001635, 60001635, 60001635, 60001637, 60001637, 60001640, 60001641, 60001642, 60001643, 60001643, 60001645, 60001645, 60001646, 60001646, 60001647, 60001647, 60001647, 60001648, 60001648, 60001649, 60001649, 60001650, 60001650, 60001652, 60001652, 60001653, 60001654, 60001655, 60001655, 60001655, 60001655, 60001657, 60001657, 60001658, 60001658, 60001659, 60001660, 60001661, 60001661, 60001662, 60001663, 60001664, 60001664, 60001666, 60001667, 60001668, 60001668, 60001668, 60001669, 60001669, 60001670, 60001671, 60001671, 60001671, 60001672, 60001672, 60001673, 60001674, 60001674, 60001674, 60001675, 60001675, 60001676, 60001676, 60001677, 60001678, 60001680, 60001681, 60001682, 60001682, 60001682, 60001683, 60001684, 60001686, 60001686, 60001690, 60001690, 60001690, 60001690, 60001691, 60001692, 60001692, 60001694, 60001695, 60001695, 60001695, 60001695, 60001695, 60001695, 60001695, 60001696, 60001696, 60001698, 60001701, 60001702, 60001702, 60001704, 60001704, 60001704, 60001704, 60001704, 60001705, 60001706, 60001706, 60001706, 60001706, 60001707, 60001708, 60001709, 60001709, 60001711, 60001711, 60001712, 60001713, 60001734, 60001734, 60001734, 60001734, 60001734, 60001734, 60001735, 60001735, 60001738, 60001739, 60001739, 60001739, 60001740, 60001740, 60001740, 60001740, 60001741, 60001742, 60001742, 60001744, 60001744, 60001744, 60001747, 60001748, 60001749, 60001750, 60001750, 60001750, 60001753, 60001753, 60001756, 60001757, 60001757, 60001758, 60001758, 60001759, 60001759, 60001760, 60001760, 60001762, 60001763, 60001764, 60001765, 60001765, 60001766, 60001767, 60001767, 60001768, 60001769, 60001769, 60001770, 60001770, 60001771, 60001771, 60001771, 60001771, 60001773, 60001773, 60001774, 60001774, 60001774, 60001775, 60001777, 60001777, 60001778, 60001779, 60001779, 60001780, 60001781, 60001783, 60001784, 60001785, 60001788, 60001789, 60001789, 60001789, 60001789, 60001789, 60001789, 60001789, 60001789, 60001790, 60001791, 60001792, 60001793, 60001793, 60001794, 60001794, 60001794, 60001795, 60001795, 60001796, 60001797, 60001798, 60001798, 60001799, 60001800, 60001800, 60001800, 60001800, 60001801, 60001801, 60001802, 60001802, 60001802, 60001803, 60001804, 60001805, 60001805, 60001805, 60001806, 60001806, 60001807, 60001810, 60001810, 60001810, 60001812, 60001812, 60001812, 60001813, 60001813, 60001814, 60001815, 60001816, 60001817, 60001819, 60001819, 60001820, 60001820, 60001820, 60001821, 60001821, 60001821, 60001822, 60001823, 60001824, 60001824, 60001827, 60001828, 60001828, 60001828, 60001829, 60001830, 60001831, 60001831, 60001831, 60001832, 60001833, 60001833, 60001834, 60001834, 60001835, 60001837, 60001838, 60001839, 60001840, 60001841, 60001841, 60001843, 60001843, 60001845, 60001846, 60001848, 60001848, 60001849, 60001850, 60001850, 60001851, 60001874, 60001877, 60001877, 60001879, 60001880, 60001880, 60001881, 60001881, 60001884, 60001884, 60001885, 60001885, 60001886, 60001886, 60001886, 60001887, 60001888, 60001888, 60001888};

  vector<int> ds4muTypes = {1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 3, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 3, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 3, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 3, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1};

  vector<double> ds4muRunTStarts = {1472176844, 1472176844, 1472176844, 1472176844, 1472176844, 1472180445, 1472184046, 1472187647, 1472187647, 1472187647, 1472191248, 1472194849, 1472198450, 1472198450, 1472198450, 1472198450, 1472202051, 1472202051, 1472209253, 1472212854, 1472212854, 1472216455, 1472220132, 1472220132, 1472223734, 1472227335, 1472230936, 1472230936, 1472234537, 1472238138, 1472248439, 1472252041, 1472260415, 1472281685, 1472281685, 1472285849, 1472290926, 1472290926, 1472290926, 1472294527, 1472294527, 1472301731, 1472305333, 1472319709, 1472323311, 1472326912, 1472330512, 1472334113, 1472334113, 1472337714, 1472341314, 1472341314, 1472344915, 1472344915, 1472348516, 1472348516, 1472352117, 1472362920, 1472366522, 1472370124, 1472370124, 1472370124, 1472373726, 1472373726, 1472377327, 1472377327, 1472380928, 1472384529, 1472384529, 1472384529, 1472392234, 1472392234, 1472399436, 1472403037, 1472403037, 1472406638, 1472406638, 1472406638, 1472410239, 1472413840, 1472413840, 1472417441, 1472417441, 1472424643, 1472428244, 1472428244, 1472435445, 1472435445, 1472435445, 1472435445, 1472439046, 1472439046, 1472439046, 1472439046, 1472439046, 1472442647, 1472446248, 1472449849, 1472457060, 1472460662, 1472460662, 1472464263, 1472464263, 1472464263, 1472471467, 1472475069, 1472478671, 1472478671, 1472482272, 1472482272, 1472482272, 1472485872, 1472489474, 1472489474, 1472496677, 1472496677, 1472496677, 1472496677, 1472507480, 1472516318, 1472519919, 1472519919, 1472519919, 1472519919, 1472519919, 1472523521, 1472523521, 1472523521, 1472523521, 1472527123, 1472527123, 1472530725, 1472534328, 1472548733, 1472548733, 1472548733, 1472552335, 1472552335, 1472559538, 1472559538, 1472563140, 1472566750, 1472566750, 1472587788, 1472598175, 1472601776, 1472605377, 1472605377, 1472608978, 1472612579, 1472612579, 1472619780, 1472619780, 1472619780, 1472619780, 1472623382, 1472623382, 1472623382, 1472623382, 1472626544, 1472630145, 1472630145, 1472630145, 1472633747, 1472640949, 1472651752, 1472651752, 1472655353, 1472655353, 1472658954, 1472662555, 1472666156, 1472666156, 1472669758, 1472680927, 1472680927, 1472684528, 1472688129, 1472688129, 1472688129, 1472691730, 1472691730, 1472695331, 1472698932, 1472698932, 1472698932, 1472702534, 1472702534, 1472702534, 1472706135, 1472706135, 1472706135, 1472709736, 1472713337, 1472713337, 1472713337, 1472716939, 1472716939, 1472716939, 1472720540, 1472724141, 1472724141, 1472724141, 1472727744, 1472731344, 1472738547, 1472738547, 1472742831, 1472764639, 1472768240, 1472771841, 1472771841, 1472779043, 1472779043, 1472779043, 1472782644, 1472782644, 1472782644, 1472786245, 1472786245, 1472789846, 1472797048, 1472797048, 1472797048, 1472800649, 1472800649, 1472807851, 1472811452, 1472818654, 1472825857, 1472825857, 1472829458, 1472833060, 1472833060, 1472833060, 1472836662, 1472836662, 1472836662, 1472841171, 1472841171, 1472845579, 1472847120, 1472847120, 1472847120, 1472850721, 1472854322, 1472854322, 1472854322, 1472857923, 1472857923, 1472861524, 1472865126, 1472865126, 1472872327, 1472872327, 1472879530, 1472879530, 1472883131, 1472883131, 1472883131, 1472890334, 1472893935, 1472893935, 1472893935, 1472897536, 1472897536, 1472897536, 1472904738, 1472904738, 1472911942, 1472911942, 1472915544, 1472915544, 1472915544, 1472922750, 1472926351, 1472926351, 1472926351, 1472926351, 1472926351, 1472929953, 1472940755, 1472940755, 1472940755, 1472944356, 1472947957, 1472947957, 1472947957, 1472951558, 1472955159, 1472955159, 1472955159, 1472959093, 1472962694, 1472962694, 1472962694, 1472969898, 1472969898, 1472973499, 1472973499, 1472977102, 1472977102, 1472980703, 1472980703, 1472987906, 1472991508, 1472991508, 1472991508, 1472995109, 1472995109, 1473002314, 1473002314, 1473002314, 1473002314, 1473002314, 1473002314, 1473005915, 1473005915, 1473009516, 1473009516, 1473013117, 1473016717, 1473016717, 1473016717, 1473027521, 1473027521, 1473027521, 1473031122, 1473031122, 1473038324, 1473041925, 1473045526, 1473045526, 1473052727, 1473052727, 1473056329, 1473056329, 1473059930, 1473063532, 1473072692, 1473076295, 1473076295, 1473079896, 1473079896, 1473083497, 1473083497, 1473119190, 1473126392, 1473129994, 1473129994, 1473133595, 1473133595, 1473133595, 1473137196, 1473137196, 1473144398, 1473155201, 1473158802, 1473162403, 1473162403, 1473162403, 1473166004, 1473166004, 1473186282, 1473186282, 1473189884, 1473197655, 1473197655, 1473201256, 1473201256, 1473204857, 1473208458, 1473208458, 1473212059, 1473212059, 1473212059, 1473215660, 1473215660, 1473215660, 1473215660, 1473219260, 1473219260, 1473219260, 1473219260, 1473222861, 1473230062, 1473230062, 1473230062, 1473233664, 1473233664, 1473237266, 1473244468, 1473251671, 1473251671, 1473251671, 1473251671, 1473255274, 1473255274, 1473258875, 1473308230, 1473308230, 1473311832, 1473315433, 1473315433, 1473319035, 1473322636, 1473326236, 1473326236, 1473326236, 1473326236, 1473333439, 1473340642, 1473340642, 1473340642, 1473344244, 1473347845, 1473372321, 1473372321, 1473372321, 1473379523, 1473383124, 1473383124, 1473383124, 1473386726, 1473386726, 1473390327, 1473390327, 1473393928, 1473397530, 1473397530, 1473401131, 1473401131, 1473404734, 1473411937, 1473411937, 1473415537, 1473415537, 1473415537, 1473415537, 1473419138, 1473419138, 1473422739, 1473422739, 1473422739, 1473426340, 1473426340, 1473429941, 1473429941, 1473429941, 1473429941, 1473433542, 1473437145, 1473444346, 1473485455, 1473485455, 1473489057, 1473492659, 1473492659, 1473492659, 1473496261, 1473496261, 1473505796, 1473509397, 1473509397, 1473512998, 1473512998, 1473512998, 1473516599, 1473520201, 1473523803, 1473523803, 1473523803, 1473527404, 1473527404, 1473527404, 1473531005, 1473538207, 1473541808, 1473549009, 1473556212, 1473556212, 1473559813, 1473570615, 1473577818, 1473577818, 1473581420, 1473581420, 1473585021, 1473588622, 1473594188, 1473594188, 1473594188, 1473594188, 1473597790, 1473601391, 1473601391, 1473604992, 1473608594, 1473612196, 1473612196, 1473615798, 1473615798, 1473619399, 1473619399, 1473623000, 1473623000, 1473623000, 1473623000, 1473626601, 1473630202, 1473630202, 1473633803, 1473633803, 1473633803, 1473644607, 1473644607, 1473651809, 1473651809, 1473655410, 1473659011, 1473662614, 1473666216, 1473666216, 1473666216, 1473669818, 1473669818, 1473673419, 1473673419, 1473677021, 1473677021, 1473680623, 1473684225, 1473684225, 1473684225, 1473687826, 1473687826, 1473691427, 1473698629, 1473718354, 1473721956, 1473725557, 1473729159, 1473732761, 1473739963, 1473743564, 1473747166, 1473747166, 1473747166, 1473750768, 1473750768, 1473754371, 1473761574, 1473761574, 1473761574, 1473761574, 1473765175, 1473768776, 1473768776, 1473772378, 1473772378, 1473772378, 1473775979, 1473779580, 1473783181, 1473786782, 1473786782, 1473786782, 1473786782, 1473790383, 1473790383, 1473793985, 1473797587, 1473797587, 1473797587, 1473804790, 1473804790, 1473808391, 1473811992, 1473819019, 1473819019, 1473819019, 1473819019, 1473822620, 1473826221, 1473826221, 1473840627, 1473840627, 1473851431, 1473851431, 1473855032, 1473855032, 1473855032, 1473855032, 1473858635, 1473858635, 1473858635, 1473862239, 1473862239, 1473865840, 1473865840, 1473869443, 1473873044, 1473876645, 1473876645, 1473876645, 1473888082, 1473888082, 1473891683, 1473891683, 1473891683, 1473891683, 1473895284, 1473895284, 1473895284, 1473895284, 1473902487, 1473902487, 1473906088, 1473909688, 1473916890, 1473920493, 1473926698, 1473930302, 1473930302, 1473933904, 1473933904, 1473937507, 1473937507, 1473937507, 1473941108, 1473941108, 1473944709, 1473951912, 1473951912, 1473951912, 1473960766, 1473964367, 1473971571, 1473982376, 1473982376, 1473982376, 1473985977, 1473985977, 1473985977, 1473989579, 1473989579, 1474003984, 1474003984, 1474007585, 1474011186, 1474014790, 1474014790, 1474021992, 1474021992, 1474025593, 1474025593, 1474032796, 1474032796, 1474036397, 1474036397, 1474036397, 1474036397, 1474044816, 1474044816, 1474044816, 1474048418, 1474055621, 1474055621, 1474059221, 1474059221, 1474065319, 1474068923, 1474072525, 1474074859, 1474074859, 1474074859, 1474074859, 1474074859, 1474082062, 1474085663, 1474085663, 1474089264, 1474092865, 1474096467, 1474096467, 1474100069, 1474103671, 1474103671, 1474107271, 1474110873, 1474110873, 1474114474, 1474121677, 1474121677, 1474121677, 1474125278, 1474128879, 1474128879, 1474132480, 1474136081, 1474143283, 1474143283, 1474143283, 1474146884, 1474146884, 1474149949, 1474149949, 1474149949, 1474153551, 1474157152, 1474160754, 1474160754, 1474164354, 1474164354, 1474167955, 1474171556, 1474175158, 1474175158, 1474182361, 1474185964, 1474189567, 1474193169, 1474196770, 1474196770, 1474200371, 1474200371, 1474203972, 1474203972, 1474203972, 1474203972, 1474203972, 1474207574, 1474211176, 1474211176, 1474211176, 1474211176, 1474218379, 1474218379, 1474229183, 1474232784, 1474236385, 1474239986, 1474239986, 1474247189, 1474247189, 1474250790, 1474250790, 1474254391, 1474254391, 1474254391, 1474257993, 1474257993, 1474260369, 1474260369, 1474263752, 1474263752, 1474270959, 1474270959, 1474274564, 1474278206, 1474281809, 1474281809, 1474281809, 1474281809, 1474289015, 1474289015, 1474292616, 1474292616, 1474296220, 1474299821, 1474303425, 1474303425, 1474307028, 1474310629, 1474314232, 1474314232, 1474321517, 1474325139, 1474328780, 1474328780, 1474328780, 1474332421, 1474332421, 1474336062, 1474339706, 1474339706, 1474339706, 1474343308, 1474343308, 1474346911, 1474350513, 1474350513, 1474350513, 1474354118, 1474354118, 1474357724, 1474357724, 1474361326, 1474364931, 1474370662, 1474374303, 1474377947, 1474377947, 1474377947, 1474381590, 1474385211, 1474392453, 1474392453, 1474406911, 1474406911, 1474406911, 1474406911, 1474410513, 1474414115, 1474414115, 1474421319, 1474424920, 1474424920, 1474424920, 1474424920, 1474424920, 1474424920, 1474424920, 1474428541, 1474428541, 1474435806, 1474446717, 1474450358, 1474450358, 1474457607, 1474457607, 1474457607, 1474457607, 1474457607, 1474461212, 1474464813, 1474464813, 1474464813, 1474464813, 1474468415, 1474472017, 1474475618, 1474475618, 1474482216, 1474482216, 1474485818, 1474486399, 1474499979, 1474499979, 1474499979, 1474499979, 1474499979, 1474499979, 1474503584, 1474503584, 1474514393, 1474517997, 1474517997, 1474517997, 1474521601, 1474521601, 1474521601, 1474521601, 1474525206, 1474528809, 1474528809, 1474536015, 1474536015, 1474536015, 1474545851, 1474546879, 1474550482, 1474554086, 1474554086, 1474554086, 1474564896, 1474564896, 1474569225, 1474572830, 1474572830, 1474576433, 1474576433, 1474580037, 1474580037, 1474583639, 1474583639, 1474590845, 1474594448, 1474598051, 1474601654, 1474601654, 1474605258, 1474608861, 1474608861, 1474612465, 1474616068, 1474616068, 1474619671, 1474619671, 1474623273, 1474623273, 1474623273, 1474623273, 1474630479, 1474630479, 1474634082, 1474634082, 1474634082, 1474637685, 1474644891, 1474644891, 1474648496, 1474652099, 1474652099, 1474655702, 1474659305, 1474666513, 1474670116, 1474673720, 1474683074, 1474686679, 1474686679, 1474686679, 1474686679, 1474686679, 1474686679, 1474686679, 1474686679, 1474690281, 1474693885, 1474697487, 1474701090, 1474701090, 1474704693, 1474704693, 1474704693, 1474708296, 1474708296, 1474711899, 1474715503, 1474719106, 1474719106, 1474722710, 1474726313, 1474726313, 1474726313, 1474726313, 1474729916, 1474729916, 1474733520, 1474733520, 1474733520, 1474737122, 1474740725, 1474744329, 1474744329, 1474744329, 1474747932, 1474747932, 1474751535, 1474762346, 1474762346, 1474762346, 1474769552, 1474769552, 1474769552, 1474773154, 1474773154, 1474776758, 1474780361, 1474783964, 1474787571, 1474793092, 1474793092, 1474796695, 1474796695, 1474796695, 1474800299, 1474800299, 1474800299, 1474803902, 1474807506, 1474811109, 1474811109, 1474821918, 1474823730, 1474823730, 1474823730, 1474827334, 1474830937, 1474834540, 1474834540, 1474834540, 1474838143, 1474841746, 1474841746, 1474845349, 1474845349, 1474848952, 1474856160, 1474859764, 1474863368, 1474866973, 1474870577, 1474870577, 1474877785, 1474877785, 1474884992, 1474888595, 1474895802, 1474895802, 1474897535, 1474901139, 1474901139, 1474901428, 1474918559, 1474923561, 1474923561, 1474930770, 1474934374, 1474934374, 1474937977, 1474937977, 1474947514, 1474947514, 1474951117, 1474951117, 1474954721, 1474954721, 1474954721, 1474958325, 1474961929, 1474961929, 1474961929};

  vector<double> ds4muTimes = {14090.6928, 14413.317, 15250.998, 15402.3958, 16672.4568, 20029.0779, 23566.6963, 25605.3344, 26847.4427, 27064.0812, 31530.6061, 33515.1272, 36659.7223, 37569.4994, 37835.5516, 38956.0274, 40769.6902, 41598.0485, 47319.1676, 51041.9251, 51872.3649, 55585.1139, 59602.4781, 60281.0847, 64423.0964, 65083.4762, 69143.3324, 71339.0597, 73536.4157, 75708.4268, 1378.07532, 7207.20368, 2971.69907, 875.62852, 1024.21635, 741.163976, 297.197919, 1040.1246, 1630.39812, 1272.46366, 2736.77085, 2344.70223, 1506.84099, 1918.87128, 2684.88964, 2774.29481, 3287.71035, 2786.16315, 3404.72909, 655.285321, 1830.27018, 2400.20898, 1195.79778, 2091.0218, 3044.18166, 3153.83269, 1629.82778, 253.675146, 3228.92992, 620.311386, 2728.45972, 3536.12599, 2737.89796, 3058.84947, 295.487015, 1242.48882, 2834.51018, 380.911355, 2072.76663, 3104.6503, 554.749486, 1642.00438, 320.353931, 2964.88073, 2985.72939, 135.423048, 1195.69035, 3497.52078, 2986.03585, 1634.63881, 3598.37369, 471.092773, 936.866675, 1490.64478, 2101.04842, 2411.68358, 212.458611, 910.519846, 2062.17392, 2714.52624, 615.613476, 1213.70019, 2634.84865, 2673.33795, 2852.60191, 3475.10193, 252.525339, 1182.99197, 1883.34671, 541.667566, 3381.46426, 427.207784, 1172.54153, 2133.7566, 1607.1951, 1051.62941, 511.674175, 1808.77499, 329.289519, 1160.84962, 1167.54084, 1348.61195, 1367.90291, 1936.64755, 574.209551, 1639.9613, 1663.00451, 1689.1927, 234.800713, 74.0867071, 921.111348, 1056.53962, 1361.26857, 1434.85846, 1573.05761, 327.921078, 1245.59692, 2033.54491, 2244.29929, 796.098042, 1987.37298, 2234.50722, 720.295647, 1616.66347, 2625.9623, 2686.026, 1217.10018, 2265.83328, 272.962801, 384.650976, 2013.91193, 274.485635, 2212.62332, 527.199539, 3539.7236, 4207.50307, 8996.71574, 9002.11609, 12082.3838, 16235.6427, 17196.7083, 23004.4167, 24492.4007, 24521.8547, 25035.9656, 25855.4043, 27063.3724, 27783.0041, 28494.2352, 28871.7982, 32273.8303, 32600.0639, 34574.2757, 36830.6766, 46588.4293, 54810.4209, 56117.2952, 59860.5362, 60631.2594, 64297.9289, 66088.3834, 68570.7223, 70983.4115, 75194.9297, 3216.85876, 3231.87321, 6553.36501, 8785.84176, 10990.5976, 11017.0195, 11557.2384, 13081.5608, 17882.5317, 18961.9851, 20634.0309, 21110.2022, 23236.2915, 23480.326, 24066.5031, 27837.852, 27838.0753, 28307.4749, 31580.4216, 33226.6454, 35335.2374, 35776.2715, 37436.1441, 37607.5225, 39782.1999, 42345.8143, 43724.4241, 44141.3471, 45615.2702, 47111.9116, 50773.8385, 58358.4873, 60909.3802, 748.599006, 25287.3202, 27485.329, 29558.571, 31923.1407, 37183.8349, 39070.6956, 39295.7597, 41915.0901, 42019.8839, 42909.4036, 44435.9346, 45847.8618, 48285.6046, 55100.2874, 55439.6979, 56769.7914, 58855.9005, 59100.5408, 66392.8939, 71364.007, 79144.4755, 84058.3949, 84140.3297, 87368.2246, 91476.8175, 92334.6522, 93896.1922, 94357.5711, 95688.9357, 96133.4997, 99517.2272, 101238.964, 102758.676, 105353.001, 106993.469, 107004.849, 108271.348, 112423.092, 115237.713, 115313.936, 115683.135, 118171.066, 121289.829, 123291.513, 125050.983, 130507.162, 132476.177, 137207.828, 137897.597, 140949.35, 141391.422, 142033.697, 147909.892, 151682.187, 153125.97, 154205.701, 157948.145, 158185.764, 158338.952, 162256.819, 163199.202, 169686.788, 171916.989, 175263.052, 175573.466, 176575.395, 182024.794, 184458.633, 185400.606, 185857.578, 186714.174, 186820.288, 189076.862, 200136.702, 200483.848, 201596.84, 204306.973, 205577.165, 208355.966, 208818.288, 209106.016, 213114.063, 215324.601, 215929.318, 217137.22, 220362.265, 220397.487, 220400.725, 228419.414, 229436.454, 231187.229, 231896.646, 234786.471, 238061.775, 239396.295, 241064.51, 248190.423, 249590.504, 250203.362, 251907.68, 253687.841, 254695.075, 260705.189, 261178.434, 261516.561, 262012.517, 262624.843, 263104.889, 264023.446, 265169.672, 267837.539, 268372.035, 272711.161, 274731.7, 275435.351, 277685.525, 285358.523, 286652.78, 287188.867, 288766.902, 290832.619, 297033.915, 299947.286, 305268.494, 305492.868, 311206.246, 311264.354, 314711.491, 316907.644, 317703.663, 323487.669, 330951.826, 334253.715, 337178.69, 339015.395, 339952.828, 341424.467, 344008.931, 379892.911, 387048.266, 389058.446, 390757.841, 392494.389, 393176.146, 393339.139, 395676.319, 396287.824, 401948.416, 414568.478, 417312.28, 420101.212, 420896.869, 422105.012, 424681.137, 425073.64, 2180.72953, 3656.70478, 4784.12084, 13233.2608, 13292.6107, 16094.0108, 16760.0279, 20289.9608, 23757.7789, 23803.7264, 26605, 27350.3428, 29130.1995, 29996.4127, 30082.0808, 30437.5977, 33308.0863, 33555.0909, 35587.9684, 36001.3024, 36486.1874, 38776.9334, 44699.7194, 44835.6971, 46036.5338, 49292.3695, 49299.0603, 52936.7235, 58683.9977, 66134.2875, 67844.9546, 68597.8095, 68612.8928, 71236.9293, 71834.5968, 75054.3767, 1011.35478, 1476.2924, 7860.43879, 10531.8408, 11825.026, 12044.5304, 18362.0784, 19447.9712, 19465.249, 21672.5045, 22105.5115, 28022.3541, 34078.1765, 34476.9525, 36853.1532, 37621.2525, 43575.5277, 983.435867, 2926.93122, 3596.99728, 8968.93053, 11268.8748, 11798.0519, 12737.3995, 17734.4201, 18115.8818, 20089.5031, 21511.1531, 25010.7949, 26638.411, 27717.677, 32014.6366, 32102.6929, 34937.5743, 41304.0822, 41823.1864, 45592.4044, 46732.9159, 46804.72, 47046.8851, 48128.249, 50292.4334, 51491.2152, 51606.6579, 52688.9315, 54726.1815, 56582.1201, 60135.6499, 60535.3772, 61122.1127, 61400.1635, 63379.4705, 66906.7571, 72627.045, 889.185668, 2666.32428, 6670.44985, 9154.78726, 10221.8827, 10421.5305, 12459.4083, 13627.3099, 6129.7199, 7627.30328, 10587.4779, 11231.9859, 12208.015, 12348.8636, 14930.3408, 21129.3886, 22923.2837, 23054.0347, 23643.2705, 25545.5089, 27714.9149, 28411.3223, 30948.2537, 39087.8456, 43029.4229, 50165.2737, 55713.681, 55840.5965, 61009.6109, 70344.7916, 76725.8992, 77537.9679, 81839.1159, 82411.8499, 86052.2298, 86786.853, 92264.9254, 93149.61, 93419.7588, 94582.4346, 97912.4786, 102090.093, 102835.751, 105929.925, 109409.997, 111172.556, 112090.867, 115825.927, 116513.927, 117671.259, 119405.152, 122688.679, 124049.746, 124168.929, 124403.703, 124840.612, 129290.37, 131500.189, 133139.13, 133815.899, 134663.246, 144839.522, 145268.571, 152279.436, 153122.128, 156154.992, 158399.842, 163228.097, 164634.287, 164667.359, 166555.491, 168998.047, 170321.858, 174357.617, 174389.31, 175925.322, 176556.971, 179735.574, 182302.925, 183481.085, 183621.91, 186148.002, 186428.567, 189674.058, 197124.573, 216396.066, 221122.918, 225715.905, 230439.701, 231607.547, 239216.286, 244552.647, 245427.262, 247431.361, 247916.486, 249059.361, 249797.249, 255171.809, 259888.088, 260530.796, 261089.659, 262758.846, 266012.749, 266959.124, 268386.3, 270999.824, 272288.7, 273908.168, 274186.376, 280968.129, 283426.479, 286160.172, 286592.929, 287628.782, 288094.797, 289474.979, 291834.009, 293513.726, 296142.44, 297223.749, 298474.634, 303048.754, 303152.949, 308646.086, 310960.821, 317195.502, 318022.959, 319284.085, 319590.912, 321876.17, 326394.429, 326671.054, 338764.166, 340912.089, 350946.465, 351486.977, 353196.759, 353380.591, 353806.507, 354615.955, 359127.575, 359547.298, 359583.144, 360512.843, 361585.54, 365948.04, 366652.534, 367590.444, 372429.669, 375528.296, 376700.049, 377876.8, 386138.714, 387761.363, 389813.167, 390594.882, 391401.966, 391510.987, 395182.566, 395503.668, 395622.321, 396070.496, 400905.713, 403673.679, 407479.371, 410994.174, 416563.052, 421498.413, 425675.041, 429176.559, 431220.524, 433659.931, 434103.555, 437039.963, 437749.418, 437990.209, 440745.611, 442384.135, 443723.162, 451436.57, 453404.24, 453408.752, 5957.1314, 9734.50089, 17505.8329, 25554.6169, 26862.2633, 26917.3341, 29704.244, 30223.2319, 31775.6891, 32968.5789, 34698.2774, 48299.4889, 49570.3775, 53735.893, 55032.8791, 58928.941, 59252.4392, 66076.0222, 66825.2194, 69622.1735, 70656.9829, 76492.2458, 78764.7077, 81591.9195, 81643.4614, 82774.9549, 82959.084, 87877.6469, 87929.3883, 89810.2636, 93411.1452, 98866.9578, 99533.8237, 102764.684, 103644.825, 2010.44933, 5056.25459, 9589.66064, 793.165382, 810.691732, 1344.13225, 1591.08005, 1808.56659, 8134.53605, 11324.0891, 13231.3444, 18045.3624, 18725.6973, 23570.1753, 23862.0912, 25695.9599, 30932.7204, 31854.0573, 32787.9364, 38610.547, 38661.3756, 43017.0665, 48964.3866, 49527.8106, 50605.4922, 52532.8357, 56698.9665, 56732.4126, 60111.0817, 63877.0332, 69770.8552, 71316.4802, 71529.4057, 73509.6777, 74725.7796, 77447.5342, 78386.1834, 78670.9484, 82238.3154, 85175.3594, 88698.9843, 89631.0652, 90984.015, 91704.8995, 93704.1515, 97234.8365, 102538.904, 103643.991, 108860.352, 113996.548, 116955.217, 121983.46, 122148.958, 124470.884, 128715.45, 128798.543, 131113.433, 131674.208, 131731.643, 132213.829, 132863.88, 135154.211, 137113.839, 138611.98, 138681.448, 138701.491, 145544.212, 147117.523, 156039.85, 158380.341, 163848.771, 165510.268, 167427.655, 173014.246, 174382.772, 178643.628, 179651.482, 180241.85, 180544.639, 180776.941, 183841.957, 185185.566, 187039.82, 187602.086, 191158.284, 192237.918, 198721.4, 199446.781, 202647.699, 203804.393, 207705.091, 208418.877, 209488.13, 210242.844, 217413.939, 217725.108, 218232.502, 219112.292, 223172.982, 225890.721, 231668.759, 232216.411, 232480.685, 236722.766, 241720.299, 242615.726, 247392.376, 250533.696, 254447.841, 256024.082, 256554.592, 258577.57, 260300.18, 264283.741, 265263.293, 265792.311, 266083.481, 269186.492, 272026.9, 275331.747, 277450.868, 278115.728, 278432.187, 280353.013, 280364.86, 284013.545, 286662.742, 290221.103, 290392.386, 298316.358, 302806.25, 305788.403, 305817.764, 306230.482, 308129.051, 312203.054, 319861.417, 320329.493, 332953.995, 333719.56, 333797.219, 335861.701, 336768.923, 339593.426, 340127.001, 347668.321, 350296.844, 350882.428, 351745.878, 352278.442, 352592.442, 353246.432, 353521.031, 354081.993, 356299.79, 363854.411, 373120.456, 376375.048, 379209.074, 383474.462, 384054.437, 384711.518, 384742.734, 385981.572, 387341.239, 390850.667, 391692.142, 392468.16, 393148.097, 395732.319, 398663.437, 402739.737, 403921.163, 409406.336, 410913.532, 411584.657, 414209.595, 4213.38465, 4250.08771, 6181.72695, 6882.01216, 7346.45605, 7359.40139, 8022.25136, 9688.22674, 21175.8124, 24748.3765, 25012.959, 25217.7753, 25826.0785, 26186.275, 27689.1228, 29053.3228, 32994.9583, 35354.5348, 35363.4794, 40636.2123, 41656.8115, 43163.2338, 50026.6913, 51561.6018, 57943.3351, 60457.7936, 61269.2751, 61270.6964, 69989.203, 71758.7005, 4960.37388, 5827.62031, 8506.13884, 9660.10574, 10010.0586, 12553.1336, 13966.5242, 18736.4258, 19321.9224, 23855.586, 29236.7892, 32994.4471, 36377.3921, 36667.7197, 37622.0765, 41489.91, 41740.4291, 47550.7681, 48851.7507, 49211.17, 52198.1637, 54150.4279, 56402.4396, 57855.1772, 57983.7338, 58269.6534, 63762.2712, 65330.6524, 67193.8806, 67855.4819, 69676.5147, 70144.8018, 77081.1166, 79116.1206, 81900.6988, 87194.2677, 87275.5425, 88857.4083, 93446.9199, 98819.7311, 105653.838, 108856.132, 117369.394, 118865.962, 119220.822, 120093.537, 120316.051, 120418.178, 121597.882, 121827.231, 121856.919, 122773.976, 129022.054, 129839.467, 134499.913, 136078.669, 139053.429, 139244.252, 139991.432, 140491.866, 141409.258, 144933.972, 149006.259, 151571.658, 152734.641, 156992.153, 158930.801, 159281.572, 160581.256, 162066.287, 165041.475, 165195.269, 166366.88, 166551.765, 168918.631, 172241.312, 174958.842, 176930.915, 177852.131, 178779.746, 181138.299, 182712.584, 186314.497, 194664.302, 194707.169, 195931.235, 202781.885, 205266.722, 205327.084, 206660.968, 207087.529, 209727.306, 215351.299, 219138.043, 221323.121, 226105.317, 228371.323, 229976.271, 230235.656, 232009.172, 232676.023, 234146.207, 235049.85, 236787.306, 243068.678, 244113.225, 245169.107, 254988.309, 1571.72449, 1733.77469, 2589.89207, 7046.80534, 9502.36281, 11535.1521, 11810.5306, 12007.4167, 16769.3459, 18786.5677, 18898.754, 22282.9659, 23479.9755, 28444.2516, 33676.3068, 36913.3072, 40211.1729, 46048.2468, 47109.7725, 50402.6678, 55769.8034, 56853.8822, 63507.5313, 68113.0699, 72448.5872, 73207.5436, 698.161396, 3970.17528, 4014.75755, 7443.40891, 433.676892, 4316.17489, 7103.46332, 12228.521, 15051.6557, 15464.0524, 18881.0968, 20499.5458, 30423.1152, 30964.7085, 31526.0525, 31529.2395, 36179.4738, 37332.0493, 38234.6411, 41761.8318, 43084.877, 43911.7165, 44925.0957};

  vector<double> ds4muUncert = {1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41517957, 1.41517957, 1.41464767, 1.41469465, 1.4151331, 1.41454142, 1.41682765, 1.41471324, 1.41471324, 1.41531558, 1.41743307, 1.41743307, 1.41508561, 1.41495329, 1.41495329, 1.41422639, 1.4149068, 1.41421404, 1.41436032, 1.41430506, 1.41453006, 1.4148291, 1.4148291, 1.41428475, 1.41449095, 1.41449095, 1.41701902, 1.41701902, 1.4143248, 1.4143248, 1.4146146, 1.41480289, 1.41425027, 1.41521071, 1.41521071, 1.41521071, 1.41427577, 1.41427577, 1.41448173, 1.41448173, 1.42187277, 1.4143046, 1.4143046, 1.4143046, 1.41468114, 1.41468114, 1.41455951, 1.41477975, 1.41477975, 1.4147421, 1.4147421, 1.41421357, 1.41421357, 1.41476452, 1.41719631, 1.41719631, 1.41719631, 1.41453123, 1.4142218, 1.4142218, 1.41463124, 1.41463124, 1.41463124, 1.41463124, 1.41454165, 1.41454165, 1.41454165, 1.41454165, 1.41454165, 1.41663212, 1.41663212, 1.41423632, 1.41524809, 1.41436202, 1.41490808, 1.41490808, 1.41490808, 1.41490808, 1.41450789, 1.41437994, 1.41541461, 1.41541461, 1.41690776, 1.41690776, 1.41690776, 1.41433257, 1.41449896, 1.41449896, 1.41716042, 1.41716042, 1.41716042, 1.41716042, 1.41650973, 1.41472528, 1.41423109, 1.41423109, 1.41423109, 1.41423109, 1.41423109, 1.41429451, 1.41429451, 1.41429451, 1.41429451, 1.41784027, 1.41784027, 1.41422206, 1.4163161, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41473689, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41781855, 1.4158292, 1.41587682, 1.41587682, 1.41691982, 1.41691982, 1.41691982, 1.41433906, 1.41433906, 1.41433906, 1.41508564, 1.41508564, 1.41954927, 1.41424952, 1.41424952, 1.41424952, 1.4142725, 1.4142725, 1.41441754, 1.4323748, 1.41462717, 1.41437726, 1.41437726, 1.41465541, 1.41572302, 1.41572302, 1.41572302, 1.4155392, 1.4155392, 1.4155392, 1.4215984, 1.4215984, 1.42073368, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421367, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41457954, 1.41457954, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41600257, 1.41600257, 1.41421357, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41661264, 1.41828786, 1.41828786, 1.41545, 1.41545, 1.41545, 1.41445022, 1.41539197, 1.41539197, 1.41771812, 1.41771812, 1.41421356, 1.41421356, 1.4148451, 1.41500724, 1.41500724, 1.41422375, 1.41494702, 1.41494702, 1.41482395, 1.41482395, 1.41482395, 1.41482395, 1.41482395, 1.41570933, 1.41570933, 1.41570933, 1.41497115, 1.41497115, 1.41738401, 1.41779489, 1.41779489, 1.41779489, 1.41779489, 1.42031221, 1.4165463, 1.41450298, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41425798, 1.41425798, 1.41425798, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421357, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41422257, 1.41422257, 1.41422257, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421379, 1.41421379, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41423386, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421357, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41468949, 1.41468949, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41552494, 1.41454081, 1.41862425, 1.41862425, 1.42875259, 1.4248037, 1.4248037, 1.41426335, 1.41426335, 1.41426335, 1.41426335, 1.42375687, 1.42375687, 1.42375687, 1.42375687, 1.41429627, 1.41429627, 1.41749124, 1.41710311, 1.42061097, 1.41424724, 1.41464421, 1.41424422, 1.41424422, 1.4193972, 1.4193972, 1.41457282, 1.41457282, 1.41457282, 1.41474387, 1.41474387, 1.4164222, 1.4145351, 1.4145351, 1.4145351, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421357, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41437266, 1.41437266, 1.41437266, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41443214, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41424129, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41438208, 1.41438208, 1.41438208, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421759, 1.41421759, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.4143305, 1.4143305, 1.4143305, 1.4143305, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41429944, 1.41429944, 1.41429944, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41426771, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.4142223, 1.41421356, 1.41421356, 1.41421356};

  // Copy vectors into the ones used by skim_mjd_data
  muRuns = ds4muRuns;
  muRunTStarts = ds4muRunTStarts;
  muTimes = ds4muTimes;
  muTypes = ds4muTypes;
  muUncert = ds4muUncert;
}